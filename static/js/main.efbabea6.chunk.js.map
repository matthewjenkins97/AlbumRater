{"version":3,"sources":["components/albumrater.js","components/spotifyalbumrater.js","App.js","serviceWorker.js","index.js"],"names":["AlbumRater","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","trackNumber","addTrack","bind","_assertThisInitialized","removeTrack","calculateTrad","_createClass","key","value","liked","total","i","this","minutes","parseInt","document","getElementById","seconds","approval","checked","isNaN","alert","Math","round","innerHTML","concat","node","createElement","id","append","forceUpdate","nodeID","remove","React","onClick","Component","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","length","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","SpotifyAlbumRater","calculateSpotify","_calculateSpotify","_asyncToGenerator","_callee","MGMT_TOKEN_URL","SPOTIFY_SEARCH_URL","SPOTIFY_ALBUM_URL","SPOTIFY_USER_URL","_this$props$auth","user","getAccessTokenSilently","userToken","mgmtUserInfo","searchParams","spotifySearchInfo","albumName","spotifyAlbumInfo","trackIds","_iterator","_step","track","spotifyLikedTrackInfo","likedTrackDurations","totalTrackDurations","albumInfo","_context","auth0","fetch","sub","headers","Authorization","json","console","log","accessToken","q","limit","URLSearchParams","albums","items","_createForOfIteratorHelper","tracks","s","n","e","f","ids","duration_ms","t0","apply","arguments","_this$props$auth2","isAuthenticated","logout","loginWithRedirect","style","float","htmlFor","returnTo","window","location","origin","pathname","withAuth0","App","class","href","Boolean","hostname","match","ReactDOM","render","Router","basename","process","Auth0Provider","domain","clientId","redirectUri","audience","scope","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efbabea6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class AlbumRater extends React.Component {\r\n  /**\r\n   * Represents an Album Rater object. Creates an initial state with 0 tracks.\r\n   * @constructor\r\n   * @param {object} props - Props for the AlbumRater object (not used).\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // setting initial variables\r\n    this.trackNumber = 0;\r\n\r\n    // binds\r\n    this.addTrack = this.addTrack.bind(this);\r\n    this.removeTrack = this.removeTrack.bind(this);\r\n    this.calculateTrad = this.calculateTrad.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Calculates the score.\r\n   * @method\r\n   */\r\n  calculateTrad() {\r\n    // calculates score based on number of seconds of each liked track over number of seconds of every track.\r\n    let liked = 0;\r\n    let total = 0;\r\n\r\n    // calculating by every track provided in the <ol>\r\n    for (let i = 1; i < this.trackNumber + 1; i++) {\r\n      const minutes = parseInt(document.getElementById('trackMinutes' + i).value);\r\n      const seconds = parseInt(document.getElementById('trackSeconds' + i).value);\r\n      const approval = document.getElementById('trackApproval' + i).checked;\r\n\r\n      // edge guarding\r\n      // anything blank?\r\n      if (isNaN(minutes) || isNaN(seconds)) {\r\n        alert('Please fill any missing data.');\r\n        return;\r\n      }\r\n      // anything not positive?\r\n      if (minutes < 0 || seconds < 0) {\r\n        alert('Minutes or seconds cannot be negative numbers.');\r\n        return;\r\n      }\r\n      // seconds greater than 60?\r\n      if (seconds >= 60) {\r\n        alert('Number of seconds cannot be greater than 60.');\r\n        return;\r\n      }\r\n\r\n      // calculation\r\n      if (approval) {\r\n        liked += parseInt(minutes) * 60;\r\n        liked += parseInt(seconds);\r\n      }\r\n      total += parseInt(minutes) * 60;\r\n      total += parseInt(seconds);\r\n    }\r\n\r\n    // presenting the math\r\n    // nothing is displayed if calculated score is NaN\r\n    if (isNaN(Math.round(liked / total))) {\r\n      document.getElementById('calculatedScoreTrad').innerHTML = '';\r\n    } else {\r\n      document.getElementById('calculatedScoreTrad').innerHTML = `Album rating: ${Math.round((liked / total) * 10) / 2} out of 5`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a track to the ordered list.\r\n   * @method\r\n   */\r\n  addTrack() {\r\n    this.trackNumber += 1;\r\n\r\n    // creating node\r\n    const node = document.createElement('li');\r\n    node.id = 'track' + this.trackNumber;\r\n    node.innerHTML = `\r\n      <input id=trackMinutes${this.trackNumber} type=number></input>\r\n      <input id=trackSeconds${this.trackNumber} type=number></input>\r\n      <input id=trackApproval${this.trackNumber} type=checkbox></input>\r\n    `;\r\n\r\n    // adding to track information in order to calculate\r\n    document.getElementById('trackList').append(node);\r\n\r\n    // refreshing widgets\r\n    this.forceUpdate();\r\n  }\r\n\r\n  /**\r\n   * Removes the last track from the ordered list.\r\n   * @method\r\n   */\r\n  removeTrack() {\r\n    // if track number > 0 you can remove and pop things, otherwise do nothing\r\n    if (this.trackNumber > 0) {\r\n      const nodeID = 'track' + this.trackNumber;\r\n      document.getElementById(nodeID).remove();\r\n    }\r\n\r\n    // set track number to 0\r\n    this.trackNumber = this.trackNumber > 0 ? this.trackNumber - 1: 0;\r\n\r\n    this.forceUpdate();\r\n  }\r\n\r\n  /**\r\n   * Renders object.\r\n   * @method\r\n   * @return {JSX}\r\n  */\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol id=\"trackList\">\r\n        </ol>\r\n        <button onClick={this.addTrack}>+</button>\r\n        <button onClick={this.removeTrack}>-</button>\r\n        <br />\r\n        <button onClick={this.calculateTrad}>Calculate!</button>\r\n        <h3 id='calculatedScoreTrad'></h3>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { withAuth0 } from \"@auth0/auth0-react\";\r\n\r\nclass SpotifyAlbumRater extends React.Component {\r\n  /**\r\n   * Represents an Album Rater object.\r\n   * @constructor\r\n   * @param {object} props - Props for the AlbumRater object (not used).\r\n   */\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // binds\r\n    this.calculateSpotify = this.calculateSpotify.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Calculates the score.\r\n   * @method\r\n   */\r\n  async calculateSpotify() {\r\n    // calculates score based on number of seconds of each liked track over number of seconds of every track.\r\n    const MGMT_TOKEN_URL = 'https://dev-06brcesa.us.auth0.com/api/v2/users/' ;\r\n    const SPOTIFY_SEARCH_URL = 'https://api.spotify.com/v1/search?';\r\n    const SPOTIFY_ALBUM_URL = 'https://api.spotify.com/v1/albums/';\r\n    const SPOTIFY_USER_URL = 'https://api.spotify.com/v1/me/tracks/contains?';\r\n    const { user, getAccessTokenSilently } = this.props.auth0;\r\n\r\n    document.getElementById('calculatedScoreSpotify').innerHTML = 'Loading rating...';\r\n\r\n    // quick error check\r\n    if (document.getElementById('album').value === \"\" || \r\n        document.getElementById('artist').value === \"\") {\r\n      document.getElementById('calculatedScoreSpotify').innerHTML = 'Please fill in any missing data and try again.';\r\n      return;\r\n    }\r\n\r\n    // getting access token\r\n    const userToken = await getAccessTokenSilently();\r\n    const mgmtUserInfo = await (await fetch(`${MGMT_TOKEN_URL}${user.sub}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${userToken}`\r\n      }\r\n    })).json();\r\n\r\n    // may need when debugging with postman\r\n    console.log(mgmtUserInfo.accessToken);\r\n\r\n    try {\r\n      // getting album by doing a search with the artist / album values\r\n      let searchParams = {\r\n        q: `${document.getElementById('album').value} ${document.getElementById('artist').value}`,\r\n        type: 'album',\r\n        limit: 1\r\n      };\r\n\r\n      // getting search and album information from api\r\n      const spotifySearchInfo = await (await fetch(`${SPOTIFY_SEARCH_URL}${new URLSearchParams(searchParams)}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${mgmtUserInfo.accessToken}`\r\n        }\r\n      })).json();\r\n\r\n      // quick catch to prevent error on next api call\r\n      if (spotifySearchInfo.albums.items[0] === undefined) {\r\n        document.getElementById('calculatedScoreSpotify').innerHTML = 'Album not found.'        \r\n        return;\r\n      }\r\n\r\n      const albumName = spotifySearchInfo.albums.items[0].id;\r\n      const spotifyAlbumInfo = await (await fetch(`${SPOTIFY_ALBUM_URL}${albumName}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${mgmtUserInfo.accessToken}`\r\n        }\r\n      })).json();\r\n\r\n      // getting tracks on the album that are liked by the user\r\n      const trackIds = [];\r\n      for (let track of spotifyAlbumInfo.tracks.items) {\r\n        trackIds.push(track.id);\r\n      }\r\n      searchParams = { ids: trackIds };\r\n      const spotifyLikedTrackInfo = await (await fetch(`${SPOTIFY_USER_URL}${new URLSearchParams(searchParams)}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${mgmtUserInfo.accessToken}`\r\n        }\r\n      })).json();\r\n\r\n      //calculating liked track length and total album length\r\n      let likedTrackDurations = 0;\r\n      let totalTrackDurations = 0;\r\n      const albumInfo = spotifyAlbumInfo.tracks.items;\r\n      for (let i = 0; i < albumInfo.length; i++) {\r\n        if (spotifyLikedTrackInfo[i]) {\r\n          likedTrackDurations = likedTrackDurations += albumInfo[i].duration_ms;\r\n        }\r\n        totalTrackDurations = totalTrackDurations + albumInfo[i].duration_ms;\r\n      }\r\n\r\n      // presenting the math\r\n      // nothing is displayed if calculated score is NaN (though it shouldn't be in any case, i don't think)\r\n      if (isNaN(Math.round(likedTrackDurations / totalTrackDurations))) {\r\n        document.getElementById('calculatedScoreSpotify').innerHTML = '';\r\n      } else {\r\n        document.getElementById('calculatedScoreSpotify').innerHTML = `Album rating: ${Math.round((likedTrackDurations / totalTrackDurations) * 10) / 2} out of 5`;\r\n      }\r\n\r\n    // catching if the Spotify API token needs refreshing\r\n    } catch (e) {\r\n      console.error(e);\r\n      document.getElementById('calculatedScoreSpotify').innerHTML = 'Something bad happened. Please logout and log in to refresh the authentication.';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renders object.\r\n   * @method\r\n   * @return {JSX}\r\n  */\r\n  render() {\r\n    const { isAuthenticated, logout, loginWithRedirect } = this.props.auth0;\r\n    return (\r\n      <div>\r\n        { isAuthenticated ?\r\n          <div>\r\n            <div style = {{float: 'left'}}>\r\n              <label htmlFor=\"artistname\">Artist: </label>\r\n              <input type=\"text\" id=\"artist\" name=\"artistname\"></input>\r\n            </div>\r\n            <div style={{float: 'right'}}>\r\n              <button  onClick={() => logout({returnTo: window.location.origin + window.location.pathname })}>Logout</button>\r\n            </div>\r\n            <br />\r\n            <div style = {{float: 'left'}}>\r\n              <label htmlFor=\"albumname\">Album: </label>\r\n              <input type=\"text\" id=\"album\" name=\"albumname\"></input>\r\n            </div>\r\n            <br />\r\n            <button onClick={this.calculateSpotify}>Calculate!</button>\r\n            <h3 id='calculatedScoreSpotify'></h3>\r\n          </div>\r\n          : \r\n          <div>\r\n            <button onClick={() => loginWithRedirect()}>Login</button>\r\n          </div>\r\n          }\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withAuth0(SpotifyAlbumRater);","import React from 'react';\r\nimport './App.css';\r\nimport AlbumRater from './components/albumrater';\r\nimport SpotifyAlbumRater from './components/spotifyalbumrater';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <h1>Album Rater</h1>\r\n      <hr />\r\n      <div class=\"grid-container\">\r\n        <div class=\"grid-child\">\r\n          <div class=\"grid-element\">\r\n            <h2>Traditional</h2>\r\n            <p>For each track on the album, type in its length in minutes and seconds, and whether you liked it or not. Your score will be automatically generated below the list.</p>\r\n            <AlbumRater></AlbumRater>\r\n          </div>\r\n        </div>\r\n        <div class=\"grid-child\">\r\n          <div class=\"grid-element\">\r\n            <h2>Spotify</h2>\r\n            <SpotifyAlbumRater></SpotifyAlbumRater>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <p>Made by <a href=\"http://matthewjenkins97.github.io\">Matthew R. Jenkins</a> in 2023. Application uses <a href=\"https://reactjs.org/\">React</a> and CSS from <a href=\"http://bettermotherfuckingwebsite.com/\">bettermotherfuckingwebsite.com</a>.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>\r\n    <Auth0Provider\r\n        domain=\"dev-06brcesa.us.auth0.com\"\r\n        clientId=\"aExrjSgZXrCRZAcUVZ9Ol6w2P3nBkrue\"\r\n        redirectUri={window.location.origin + window.location.pathname}\r\n        audience=\"https://dev-06brcesa.us.auth0.com/api/v2/\"\r\n        scope=\"read:current_user read:user_idp_tokens offline_access\"\r\n    >\r\n        <App />\r\n    </Auth0Provider>\r\n</Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}